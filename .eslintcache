[{"/home/ramu/Desktop/ramu-node/interviews/fractal/client/my-app/src/index.js":"1","/home/ramu/Desktop/ramu-node/interviews/fractal/client/my-app/src/App.js":"2","/home/ramu/Desktop/ramu-node/interviews/fractal/client/my-app/src/reportWebVitals.js":"3","/home/ramu/Desktop/ramu-node/interviews/fractal/client/my-app/src/components/home.js":"4","/home/ramu/Desktop/ramu-node/interviews/fractal/client/my-app/src/components/header.js":"5","/home/ramu/Desktop/ramu-node/interviews/fractal/client/my-app/src/store/actions/home_action.js":"6","/home/ramu/Desktop/ramu-node/interviews/fractal/client/my-app/src/store/actions/actionTypes.js":"7","/home/ramu/Desktop/ramu-node/interviews/fractal/client/my-app/src/axios.js":"8","/home/ramu/Desktop/ramu-node/interviews/fractal/client/my-app/src/store/reducer/home_reducer.js":"9","/home/ramu/Desktop/ramu-node/interviews/fractal/client/my-app/src/components/bucket.js":"10","/home/ramu/Desktop/ramu-node/interviews/fractal/client/my-app/src/components/todo.js":"11","/home/ramu/Desktop/ramu-node/interviews/fractal/client/my-app/src/components/modal.js":"12"},{"size":1088,"mtime":1610794935268,"results":"13","hashOfConfig":"14"},{"size":410,"mtime":1610860763426,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1610612375357,"results":"16","hashOfConfig":"14"},{"size":2908,"mtime":1610861231326,"results":"17","hashOfConfig":"14"},{"size":1197,"mtime":1610861608007,"results":"18","hashOfConfig":"14"},{"size":2849,"mtime":1610854568924,"results":"19","hashOfConfig":"14"},{"size":663,"mtime":1610816262884,"results":"20","hashOfConfig":"14"},{"size":178,"mtime":1610895718292,"results":"21","hashOfConfig":"14"},{"size":2564,"mtime":1610856936775,"results":"22","hashOfConfig":"14"},{"size":3062,"mtime":1610856308153,"results":"23","hashOfConfig":"14"},{"size":1053,"mtime":1610817727386,"results":"24","hashOfConfig":"14"},{"size":2647,"mtime":1610857818951,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"iv5h8m",{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},"/home/ramu/Desktop/ramu-node/interviews/fractal/client/my-app/src/index.js",[],["56","57"],"/home/ramu/Desktop/ramu-node/interviews/fractal/client/my-app/src/App.js",["58","59","60","61"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Route, Switch, Link, useLocation } from \"react-router-dom\";\nimport Home from \"./components/home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/home\" exact component={Home} />\n      <Route path=\"/important\" exact component={Home} />\n\n    </div>\n  );\n}\n\nexport default App;\n","/home/ramu/Desktop/ramu-node/interviews/fractal/client/my-app/src/reportWebVitals.js",[],"/home/ramu/Desktop/ramu-node/interviews/fractal/client/my-app/src/components/home.js",[],"/home/ramu/Desktop/ramu-node/interviews/fractal/client/my-app/src/components/header.js",[],"/home/ramu/Desktop/ramu-node/interviews/fractal/client/my-app/src/store/actions/home_action.js",["62","63","64"],"import axios from \"../../axios\";\nconst actionType = require(\"./actionTypes\");\nconst _ = require(\"lodash\");\n\nexport const callActionForGetDataForApp = (bucketData, toDoData) => {\n  let groupByBucket = _.groupBy(toDoData.data, \"bucket_id\");\n  let data = {\n    todo: groupByBucket,\n    bucketData: bucketData.data,\n  };\n  return {\n    type: actionType.GET_HOME_DATA,\n    data,\n  };\n};\n\nexport const insertNewTodo = (bucketId, todo) => {\n  console.log(\"==================\" + bucketId);\n  console.log(\"==================\" + todo);\n\n  let data = {\n    bucketId,\n    todo,\n  };\n  return {\n    type: actionType.CREATE_TODO,\n    data,\n  };\n};\nexport const createTodo = (todoDetails) => {\n  let body = {\n    name: todoDetails.todoContent,\n    bucket_id: todoDetails.bucketCode,\n  };\n\n  return async (dispatch) => {\n    let todo = await axios.post(\"/todo/add\", body);\n    dispatch(insertNewTodo(todoDetails.bucketCode, todo.data));\n  };\n};\n\nexport const removeTodo = (todoCode, bucketCode) => {\n  let data = {\n    todoCode,\n    bucketCode,\n  };\n  return {\n    type: actionType.DELETE_TODO,\n    data,\n  };\n};\nexport const deleteTodo = (deleteTodoDetails) => {\n  let todoCode = deleteTodoDetails.todoId;\n  let bucketCode = deleteTodoDetails.bucketId;\n\n  return async (dispatch) => {\n    try {\n      let deleteData = await axios.delete(`/todo/delete/${todoCode}`);\n      dispatch(removeTodo(todoCode, bucketCode));\n    } catch (e) {\n      console.log(\"erro\", e);\n    }\n  };\n};\n\nexport const updateTodoAsMarked = (todoCode, bucketCode) => {\n  let data = {\n    todoCode,\n    bucketCode,\n  };\n  return {\n    type: actionType.UPDATE_TODO,\n    data,\n  };\n};\n\nexport const updateNewBucket = (body, response) => {\n  let data = response.data.data;\n  return {\n    type: actionType.UPSERT_BUCKET,\n    data,\n  };\n};\nexport const updateTodo = (markUpdate) => {\n  let todoCode = markUpdate.todoId;\n  let bucketCode = markUpdate.bucketId;\n  let body = {\n    marked: markUpdate.markedValue,\n  };\n  return async (dispatch) => {\n    try {\n      let updateData = await axios.post(`/todo/update/${todoCode}`, body);\n      dispatch(updateTodoAsMarked(todoCode, bucketCode));\n    } catch (e) {\n      console.log(\"erro\", e);\n    }\n  };\n};\n\nexport const getAllForHome = () => {\n  return async (dispatch) => {\n    try {\n      let bucketData = await axios.get(\"/bucket/getALL\");\n      let toDoData = await axios.get(\"/todo/getALL\");\n      dispatch(callActionForGetDataForApp(bucketData.data, toDoData.data));\n    } catch (e) {\n      console.log(\"Error occur while getAll For home\", e);\n    }\n  };\n};\n\nexport const createAndUpdateBucket = (details) => {\n  try {\n    return async (dispatch) => {\n      let data = await axios.post(\"/bucket/add\", details);\n      dispatch(updateNewBucket(details, data));\n    };\n  } catch (e) {\n    console.log(\"Error occur while getAll For home\", e);\n  }\n};\n","/home/ramu/Desktop/ramu-node/interviews/fractal/client/my-app/src/store/actions/actionTypes.js",[],"/home/ramu/Desktop/ramu-node/interviews/fractal/client/my-app/src/axios.js",[],"/home/ramu/Desktop/ramu-node/interviews/fractal/client/my-app/src/store/reducer/home_reducer.js",["65","66","67","68","69","70"],"const actionType = require(\"../actions/actionTypes\");\nconst _ = require(\"lodash\");\n\nconst inititalState = {\n  bucketData: [],\n  todoData: [],\n};\n\nconst setHomeData = (state, responseData) => {\n  let finalState = { ...state };\n  finalState.bucketData = responseData.bucketData;\n  finalState.todoData = responseData.todo;\n  return finalState;\n};\n\nconst insertTodo = (state, newTodoData) => {\n  let finalState = { ...state };\n  let bucketid = _.get(newTodoData, \"bucketId\", \"\");\n  let bucketDetails = [];\n  if (!_.isEmpty(finalState.todoData[bucketid])) {\n    bucketDetails = [...finalState.todoData[bucketid]];\n  }\n  bucketDetails.push(newTodoData.todo.data);\n  finalState.todoData[bucketid] = bucketDetails;\n  return finalState;\n};\n\nconst deleteTodoFromBucketDetails = (state, data) => {\n  let finalState = { ...state };\n  let bucketId = data.bucketCode;\n  let todoId = data.todoCode;\n  let bucketDetails = finalState.todoData[bucketId];\n  _.remove(bucketDetails, { code: todoId });\n  finalState.todoData[bucketId] = bucketDetails;\n  return finalState;\n};\n\nconst updateTodoForBucket = (state, data) => {\n  let finalState = { ...state };\n  let bucketId = data.bucketCode;\n  let todoId = data.todoCode;\n  let bucketDetails = finalState.todoData[bucketId];\n  let todoDetails = _.find(bucketDetails, { code: todoId });\n  _.set(todoDetails, \"marked\", !_.get(todoDetails, \"marked\", false));\n  finalState.todoData[bucketId] = bucketDetails;\n  return finalState;\n};\n\nconst upsertBucketDetails = (state, data) => {\n  let finalState = { ...state };\n  let bucketDetails = finalState.bucketData || [];\n  if (_.isEmpty(bucketDetails)) {\n    bucketDetails = [];\n  }\n  let existData = _.find(bucketDetails, { code: data.code });\n  if (!_.isEmpty(existData)) {\n    _.remove(bucketDetails, { code: data.code });\n  }\n  bucketDetails.push(data);\n  bucketDetails = _.uniqBy(bucketDetails, \"code\");\n  finalState.bucketData = bucketDetails;\n  return finalState;\n};\nconst reducer = (state = inititalState, action) => {\n  switch (action.type) {\n    case actionType.GET_HOME_DATA:\n      return setHomeData(state, action.data);\n      break;\n    case actionType.CREATE_TODO:\n      return insertTodo(state, action.data);\n      break;\n    case actionType.DELETE_TODO:\n      return deleteTodoFromBucketDetails(state, action.data);\n      break;\n    case actionType.UPDATE_TODO:\n      return updateTodoForBucket(state, action.data);\n      break;\n    case actionType.UPSERT_BUCKET:\n      return upsertBucketDetails(state, action.data);\n      break;\n  }\n\n  return state;\n};\n\nexport default reducer;\n","/home/ramu/Desktop/ramu-node/interviews/fractal/client/my-app/src/components/bucket.js",["71","72"],"import React, { Component } from \"react\";\nimport \"../css/bucket.css\";\nimport { GrEdit } from \"react-icons/gr\";\nimport Todo from \"./todo\";\nimport { render } from \"react-dom\";\nimport { connect } from \"react-redux\";\nimport * as homeAction from \"../store/actions/home_action\";\n\nconst _ = require(\"lodash\");\nclass Bucket extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    bucketId: \"\",\n    todo_content: \"\",\n  };\n\n  handleChangeTodo = (e, bucketId) => {\n    // console.log(e.target.value);\n    // console.log(bucketId);\n    this.setState({\n      todo_content: e.target.value,\n    });\n  };\n  handleCreateTodo = (todoContent, bucketCode) => {\n    let obj = {\n      todoContent,\n      bucketCode,\n    };\n    if(!_.isEmpty(todoContent)){\n      this.props.createTodo(obj);\n    }\n    this.setState({\n      todo_content: \"\",\n    });\n  };\n  handleDeleteTodo = (todoId, bucketId) => {\n    console.log(todoId);\n    console.log(bucketId);\n    let obj = {\n      todoId,\n      bucketId,\n    };\n    this.props.deleteTodo(obj);\n  };\n  handleMarkTodo = (todoId, bucketId,isMarked) => {\n    let obj = {\n      todoId,\n      bucketId,\n      markedValue:!isMarked\n    };\n    this.props.updateTodo(obj);\n  };\n  render() {\n    let bucketName = _.get(this.props.bucket, \"name\", \"\");\n    let bucketCode = _.get(this.props.bucket, \"code\", \"\");\n\n    let toDomapped = null;\n\n    if (!_.isEmpty(this.props.todo)) {\n      toDomapped = _.map(this.props.todo, (eachTodo) => {\n        return (\n          <Todo\n            details={eachTodo}\n            bucketId={bucketCode}\n            delete={this.handleDeleteTodo}\n            marked={this.handleMarkTodo}\n          />\n        );\n      });\n    }\n    return (\n      <div className=\"bucket-wrapper\">\n        <div className=\"name-edit-section\">\n          <div>{bucketName}</div>\n          <div className=\"edit-btn\" onClick={()=>this.props.edit(bucketCode)}>\n            <GrEdit />\n          </div>\n        </div>\n        <div className=\"todo-list-wrapper\">{toDomapped}</div>\n        <div className=\"create-todo\">\n          <div className=\"create-todo-input-wrapper\">\n            <input\n              className=\"create-todo-input\"\n              type=\"text\"\n              name=\"name\"\n              value={this.state.todo_content}\n              onChange={(e) => this.handleChangeTodo(e, bucketCode)}\n            />\n            <button\n              className=\"create-todo-btn\"\n              onClick={(e) =>\n                this.handleCreateTodo(this.state.todo_content, bucketCode)\n              }\n            >\n              Create To do\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    app: state.home,\n  };\n};\n\nconst mapDispatchToProps = (dipatch) => {\n  return {\n    createTodo: (data) => dipatch(homeAction.createTodo(data)),\n    deleteTodo: (data) => dipatch(homeAction.deleteTodo(data)),\n    updateTodo: (data) => dipatch(homeAction.updateTodo(data)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bucket);\n","/home/ramu/Desktop/ramu-node/interviews/fractal/client/my-app/src/components/todo.js",[],"/home/ramu/Desktop/ramu-node/interviews/fractal/client/my-app/src/components/modal.js",["73","74","75"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as homeAction from \"../store/actions/home_action\";\nimport \"../css/modal.css\";\nimport { GiCancel } from \"react-icons/gi\";\nimport { IoIosCheckmarkCircleOutline } from \"react-icons/io\";\nconst _ = require(\"lodash\");\n\nclass Modal extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    bucketName: this.props.modalKey === \"edit\" ? this.props.editDetails.name : \"\",\n    bukcetId: this.props.modalKey === \"edit\" ? this.props.editDetails.code : \"\",\n    isMarked:\n      this.props.modalKey === \"edit\" ? this.props.editDetails.marked_as_imp : false,\n  };\n\n  handleChangeBucketName = (e) => {\n    this.setState({\n      bucketName: e.target.value,\n    });\n  };\n  handleChangeMarked = () => {\n    this.setState({\n      isMarked: !this.state.isMarked,\n    });\n  };\n\n  render() {\n    let obj = {};\n\n    if (this.state.isMarked) {\n      obj = {\n        \"background-color\": \"green\",\n        color: \"white\",\n        \"border-radius\": \"50%\",\n      };\n    }\n    return (\n      <div className=\"modal\">\n        <div className=\"modal-content\">\n          <div className=\"modal-name-and-cancel\">\n            <div className=\"modal-bucket-name\">Bucket Name</div>\n            <div onClick={() => this.props.isCloseModal()}>\n              <GiCancel />\n            </div>\n          </div>\n\n          <div className=\"modal-details-content\">\n            <div className=\"modal-bucket-name-input\">\n              <input\n                className=\"modal-name-input\"\n                type=\"text\"\n                name=\"name\"\n                onChange={(e) => this.handleChangeBucketName(e)}\n                value={this.state.bucketName}\n              />\n            </div>\n            <div\n              className=\"modal-marked-as-imp\"\n              onClick={this.handleChangeMarked}\n            >\n              <span>Marked As Important </span>\n              <IoIosCheckmarkCircleOutline size=\"40\" style={obj} />\n            </div>\n            <div\n              className=\"modal-save\"\n              onClick={() =>\n                this.props.createBucket(\n                  this.state.bucketName,\n                  this.state.bukcetId,\n                  this.state.isMarked\n                )\n              }\n            >\n              <button className=\"modal-save-btn\">Save</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    appData: state.home,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":8,"nodeType":"82","messageId":"83","endLine":1,"endColumn":12},{"ruleId":"80","severity":1,"message":"84","line":3,"column":17,"nodeType":"82","messageId":"83","endLine":3,"endColumn":23},{"ruleId":"80","severity":1,"message":"85","line":3,"column":25,"nodeType":"82","messageId":"83","endLine":3,"endColumn":29},{"ruleId":"80","severity":1,"message":"86","line":3,"column":31,"nodeType":"82","messageId":"83","endLine":3,"endColumn":42},{"ruleId":"80","severity":1,"message":"87","line":58,"column":11,"nodeType":"82","messageId":"83","endLine":58,"endColumn":21},{"ruleId":"80","severity":1,"message":"88","line":92,"column":11,"nodeType":"82","messageId":"83","endLine":92,"endColumn":21},{"ruleId":"89","severity":1,"message":"90","line":118,"column":15,"nodeType":"91","messageId":"92","endLine":120,"endColumn":4},{"ruleId":"93","severity":1,"message":"94","line":65,"column":3,"nodeType":"95","messageId":"96","endLine":81,"endColumn":4},{"ruleId":"89","severity":1,"message":"90","line":68,"column":7,"nodeType":"97","messageId":"92","endLine":68,"endColumn":13},{"ruleId":"89","severity":1,"message":"90","line":71,"column":7,"nodeType":"97","messageId":"92","endLine":71,"endColumn":13},{"ruleId":"89","severity":1,"message":"90","line":74,"column":7,"nodeType":"97","messageId":"92","endLine":74,"endColumn":13},{"ruleId":"89","severity":1,"message":"90","line":77,"column":7,"nodeType":"97","messageId":"92","endLine":77,"endColumn":13},{"ruleId":"89","severity":1,"message":"90","line":80,"column":7,"nodeType":"97","messageId":"92","endLine":80,"endColumn":13},{"ruleId":"80","severity":1,"message":"98","line":5,"column":10,"nodeType":"82","messageId":"83","endLine":5,"endColumn":16},{"ruleId":"99","severity":1,"message":"100","line":11,"column":3,"nodeType":"101","messageId":"102","endLine":13,"endColumn":4},{"ruleId":"80","severity":1,"message":"103","line":3,"column":13,"nodeType":"82","messageId":"83","endLine":3,"endColumn":23},{"ruleId":"80","severity":1,"message":"104","line":7,"column":7,"nodeType":"82","messageId":"83","endLine":7,"endColumn":8},{"ruleId":"99","severity":1,"message":"100","line":10,"column":3,"nodeType":"101","messageId":"102","endLine":12,"endColumn":4},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Link' is defined but never used.","'useLocation' is defined but never used.","'deleteData' is assigned a value but never used.","'updateData' is assigned a value but never used.","no-unreachable","Unreachable code.","BlockStatement","unreachableCode","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","BreakStatement","'render' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'homeAction' is defined but never used.","'_' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]